import "strings"

providers = {
	"aws": {
		"alias": "",
		"config": {
			"default_tags": [
				{
					"tags": {
						"constant_value": {
							"Owner":   "jerry & tom",
							"Project": "terraform cloud workflow",
						},
					},
				},
			],
			"region": {
				"references": [
					"var.region",
				],
			},
		},
		"full_name":           "registry.terraform.io/hashicorp/aws",
		"module_address":      "",
		"name":                "aws",
		"provider_config_key": "aws",
		"version_constraint":  "~> 4.0",
	},
	"null": {
		"alias":               "",
		"config":              {},
		"full_name":           "registry.terraform.io/hashicorp/null",
		"module_address":      "",
		"name":                "null",
		"provider_config_key": "null",
		"version_constraint":  "",
	},
	"tls": {
		"alias":               "",
		"config":              {},
		"full_name":           "registry.terraform.io/hashicorp/tls",
		"module_address":      "",
		"name":                "tls",
		"provider_config_key": "tls",
		"version_constraint":  "",
	},
}

resources = {
	"aws_eip.hashicat": {
		"address": "aws_eip.hashicat",
		"config": {
			"instance": {
				"references": [
					"aws_instance.hashicat.id",
					"aws_instance.hashicat",
				],
			},
			"vpc": {
				"constant_value": true,
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "hashicat",
		"provider_config_key": "aws",
		"provisioners":        [],
		"type":                "aws_eip",
	},
	"aws_eip_association.hashicat": {
		"address": "aws_eip_association.hashicat",
		"config": {
			"allocation_id": {
				"references": [
					"aws_eip.hashicat.id",
					"aws_eip.hashicat",
				],
			},
			"instance_id": {
				"references": [
					"aws_instance.hashicat.id",
					"aws_instance.hashicat",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "hashicat",
		"provider_config_key": "aws",
		"provisioners":        [],
		"type":                "aws_eip_association",
	},
	"aws_instance.hashicat": {
		"address": "aws_instance.hashicat",
		"config": {
			"ami": {
				"references": [
					"data.aws_ami.ubuntu.id",
					"data.aws_ami.ubuntu",
				],
			},
			"associate_public_ip_address": {
				"constant_value": true,
			},
			"instance_type": {
				"references": [
					"var.instance_type",
				],
			},
			"key_name": {
				"references": [
					"aws_key_pair.hashicat.key_name",
					"aws_key_pair.hashicat",
				],
			},
			"subnet_id": {
				"references": [
					"aws_subnet.hashicat.id",
					"aws_subnet.hashicat",
				],
			},
			"tags": {
				"references": [
					"var.prefix",
				],
			},
			"vpc_security_group_ids": {
				"references": [
					"aws_security_group.hashicat.id",
					"aws_security_group.hashicat",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "hashicat",
		"provider_config_key": "aws",
		"provisioners":        [],
		"type":                "aws_instance",
	},
	"aws_internet_gateway.hashicat": {
		"address": "aws_internet_gateway.hashicat",
		"config": {
			"tags": {
				"references": [
					"var.prefix",
				],
			},
			"vpc_id": {
				"references": [
					"aws_vpc.hashicat.id",
					"aws_vpc.hashicat",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "hashicat",
		"provider_config_key": "aws",
		"provisioners":        [],
		"type":                "aws_internet_gateway",
	},
	"aws_key_pair.hashicat": {
		"address": "aws_key_pair.hashicat",
		"config": {
			"key_name": {
				"references": [
					"local.private_key_filename",
				],
			},
			"public_key": {
				"references": [
					"tls_private_key.hashicat.public_key_openssh",
					"tls_private_key.hashicat",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "hashicat",
		"provider_config_key": "aws",
		"provisioners":        [],
		"type":                "aws_key_pair",
	},
	"aws_route_table.hashicat": {
		"address": "aws_route_table.hashicat",
		"config": {
			"route": {
				"references": [
					"aws_internet_gateway.hashicat.id",
					"aws_internet_gateway.hashicat",
				],
			},
			"vpc_id": {
				"references": [
					"aws_vpc.hashicat.id",
					"aws_vpc.hashicat",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "hashicat",
		"provider_config_key": "aws",
		"provisioners":        [],
		"type":                "aws_route_table",
	},
	"aws_route_table_association.hashicat": {
		"address": "aws_route_table_association.hashicat",
		"config": {
			"route_table_id": {
				"references": [
					"aws_route_table.hashicat.id",
					"aws_route_table.hashicat",
				],
			},
			"subnet_id": {
				"references": [
					"aws_subnet.hashicat.id",
					"aws_subnet.hashicat",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "hashicat",
		"provider_config_key": "aws",
		"provisioners":        [],
		"type":                "aws_route_table_association",
	},
	"aws_security_group.hashicat": {
		"address": "aws_security_group.hashicat",
		"config": {
			"egress": {
				"constant_value": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description":      null,
						"from_port":        0,
						"ipv6_cidr_blocks": null,
						"prefix_list_ids":  [],
						"protocol":         "-1",
						"security_groups":  null,
						"self":             null,
						"to_port":          0,
					},
				],
			},
			"ingress": {
				"constant_value": [
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description":      null,
						"from_port":        22,
						"ipv6_cidr_blocks": null,
						"prefix_list_ids":  null,
						"protocol":         "tcp",
						"security_groups":  null,
						"self":             null,
						"to_port":          22,
					},
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description":      null,
						"from_port":        80,
						"ipv6_cidr_blocks": null,
						"prefix_list_ids":  null,
						"protocol":         "tcp",
						"security_groups":  null,
						"self":             null,
						"to_port":          80,
					},
					{
						"cidr_blocks": [
							"0.0.0.0/0",
						],
						"description":      null,
						"from_port":        443,
						"ipv6_cidr_blocks": null,
						"prefix_list_ids":  null,
						"protocol":         "tcp",
						"security_groups":  null,
						"self":             null,
						"to_port":          443,
					},
				],
			},
			"name": {
				"references": [
					"var.prefix",
				],
			},
			"tags": {
				"references": [
					"var.prefix",
				],
			},
			"vpc_id": {
				"references": [
					"aws_vpc.hashicat.id",
					"aws_vpc.hashicat",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "hashicat",
		"provider_config_key": "aws",
		"provisioners":        [],
		"type":                "aws_security_group",
	},
	"aws_subnet.hashicat": {
		"address": "aws_subnet.hashicat",
		"config": {
			"cidr_block": {
				"references": [
					"var.subnet_prefix",
				],
			},
			"tags": {
				"references": [
					"var.prefix",
				],
			},
			"vpc_id": {
				"references": [
					"aws_vpc.hashicat.id",
					"aws_vpc.hashicat",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "hashicat",
		"provider_config_key": "aws",
		"provisioners":        [],
		"type":                "aws_subnet",
	},
	"aws_vpc.hashicat": {
		"address": "aws_vpc.hashicat",
		"config": {
			"cidr_block": {
				"references": [
					"var.address_space",
				],
			},
			"enable_dns_hostnames": {
				"constant_value": true,
			},
			"tags": {
				"references": [
					"var.prefix",
					"var.region",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "hashicat",
		"provider_config_key": "aws",
		"provisioners":        [],
		"type":                "aws_vpc",
	},
	"data.aws_ami.ubuntu": {
		"address": "data.aws_ami.ubuntu",
		"config": {
			"filter": [
				{
					"name": {
						"constant_value": "name",
					},
					"values": {
						"constant_value": [
							"ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-*",
						],
					},
				},
				{
					"name": {
						"constant_value": "virtualization-type",
					},
					"values": {
						"constant_value": [
							"hvm",
						],
					},
				},
			],
			"most_recent": {
				"constant_value": true,
			},
			"owners": {
				"constant_value": [
					"099720109477",
				],
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "data",
		"module_address":      "",
		"name":                "ubuntu",
		"provider_config_key": "aws",
		"provisioners":        [],
		"type":                "aws_ami",
	},
	"null_resource.configure-cat-app": {
		"address": "null_resource.configure-cat-app",
		"config":  {},
		"count":   {},
		"depends_on": [
			"aws_eip_association.hashicat",
		],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "configure-cat-app",
		"provider_config_key": "null",
		"provisioners": [
			{
				"config": {
					"destination": {
						"constant_value": "/home/ubuntu/",
					},
					"source": {
						"constant_value": "files/",
					},
				},
				"index":            0,
				"resource_address": "null_resource.configure-cat-app",
				"type":             "file",
			},
			{
				"config": {
					"inline": {
						"references": [
							"var.placeholder",
							"var.width",
							"var.height",
							"var.prefix",
						],
					},
				},
				"index":            1,
				"resource_address": "null_resource.configure-cat-app",
				"type":             "remote-exec",
			},
		],
		"type": "null_resource",
	},
	"tls_private_key.hashicat": {
		"address": "tls_private_key.hashicat",
		"config": {
			"algorithm": {
				"constant_value": "RSA",
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "hashicat",
		"provider_config_key": "tls",
		"provisioners":        [],
		"type":                "tls_private_key",
	},
}

provisioners = {
	"null_resource.configure-cat-app:0": {
		"config": {
			"destination": {
				"constant_value": "/home/ubuntu/",
			},
			"source": {
				"constant_value": "files/",
			},
		},
		"index":            0,
		"resource_address": "null_resource.configure-cat-app",
		"type":             "file",
	},
	"null_resource.configure-cat-app:1": {
		"config": {
			"inline": {
				"references": [
					"var.placeholder",
					"var.width",
					"var.height",
					"var.prefix",
				],
			},
		},
		"index":            1,
		"resource_address": "null_resource.configure-cat-app",
		"type":             "remote-exec",
	},
}

variables = {
	"address_space": {
		"default":        "10.0.0.0/16",
		"description":    "The address space that is used by the virtual network. You can supply more than one address space. Changing this forces a new resource to be created.",
		"module_address": "",
		"name":           "address_space",
	},
	"height": {
		"default":        "400",
		"description":    "Image height in pixels.",
		"module_address": "",
		"name":           "height",
	},
	"instance_type": {
		"default":        "t3.micro",
		"description":    "Specifies the AWS instance type.",
		"module_address": "",
		"name":           "instance_type",
	},
	"placeholder": {
		"default":        "placekitten.com",
		"description":    "Image-as-a-service URL. Some other fun ones to try are fillmurray.com, placecage.com, placebeard.it, loremflickr.com, baconmockup.com, placeimg.com, placebear.com, placeskull.com, stevensegallery.com, placedog.net",
		"module_address": "",
		"name":           "placeholder",
	},
	"prefix": {
		"default":        null,
		"description":    "This prefix will be included in the name of most resources.",
		"module_address": "",
		"name":           "prefix",
	},
	"region": {
		"default":        "ap-northeast-2",
		"description":    "The region where the resources are created.",
		"module_address": "",
		"name":           "region",
	},
	"subnet_prefix": {
		"default":        "10.0.10.0/24",
		"description":    "The address prefix to use for the subnet.",
		"module_address": "",
		"name":           "subnet_prefix",
	},
	"width": {
		"default":        "600",
		"description":    "Image width in pixels.",
		"module_address": "",
		"name":           "width",
	},
}

outputs = {
	"catapp_ip": {
		"depends_on":     [],
		"description":    "",
		"module_address": "",
		"name":           "catapp_ip",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_eip.hashicat.public_ip",
				"aws_eip.hashicat",
			],
		},
	},
	"catapp_url": {
		"depends_on":     [],
		"description":    "",
		"module_address": "",
		"name":           "catapp_url",
		"sensitive":      false,
		"value": {
			"references": [
				"aws_eip.hashicat.public_dns",
				"aws_eip.hashicat",
			],
		},
	},
}

module_calls = {}

strip_index = func(addr) {
	s = strings.split(addr, ".")
	for s as i, v {
		s[i] = strings.split(v, "[")[0]
	}

	return strings.join(s, ".")
}
