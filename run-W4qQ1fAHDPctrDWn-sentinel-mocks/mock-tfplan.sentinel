import "strings"
import "types"

_modules = {
	"root": {
		"data":      {},
		"path":      [],
		"resources": {},
	},
}

module_paths = [
	[],
]

terraform_version = "1.3.1"

variables = {
	"address_space": "10.0.0.0/16",
	"height":        "400",
	"instance_type": "t3.micro",
	"placeholder":   "placekitten.com",
	"prefix":        "yoojonglee",
	"region":        "ap-northeast-2",
	"subnet_prefix": "10.0.10.0/24",
	"width":         "600",
}

module = func(path) {
	if types.type_of(path) is not "list" {
		error("expected list, got", types.type_of(path))
	}

	if length(path) < 1 {
		return _modules.root
	}

	addr = []
	for path as p {
		append(addr, "module")
		append(addr, p)
	}

	return _modules[strings.join(addr, ".")]
}

data = _modules.root.data
path = _modules.root.path
resources = _modules.root.resources
